<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ClassicalMusicCSharp.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Template10.Controls"
    xmlns:vm="using:ClassicalMusicCSharp.ViewModels"
    xmlns:Converters="using:ClassicalMusicCSharp.Converters" 
    xmlns:Universal="using:Microsoft.AdMediator.Universal"
    x:Class="ClassicalMusicCSharp.Views.PlayerPage"
    mc:Ignorable="d"
    xmlns:uc="using:ClassicalMusicCSharp.Views.UserControls">
    <Page.Resources>
        <Converters:BoolToVisibility x:Key="BoolVisibility"/>
        <Converters:NotBoolToVisibility x:Key="NotBoolVisibility"/>
        <Converters:StringVisibility x:Key="StringVisibility"/>
    </Page.Resources>
    <Page.DataContext>
        <vm:PlayerPageVM/>
    </Page.DataContext>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <controls:PageHeader BackButtonVisibility="Collapsed" Content="Player" Frame="{x:Bind Frame}"/>

        <ListView x:Name="_xplaylist" Grid.Row="2" ItemsSource="{x:Bind VM.Playlist.List}" ItemClick="{x:Bind VM.ItemClicked}" IsItemClickEnabled="True">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <uc:TrackUC RightTapped="PlaylistItemMenu"/>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>

        <Grid Grid.Row="3" BorderThickness="0,2,0,0" BorderBrush="Gray">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <StackPanel Margin="8">
                <TextBlock Text="{Binding CurrentTrack.Album}" Visibility="{Binding CurrentTrack.Album, Converter={StaticResource StringVisibility}}"/>

                <TextBlock FontSize="12" Visibility="{Binding CurrentTrack.Track, Converter={StaticResource StringVisibility}}">
					<Run Text="Track: "/>
					<Run Text="{Binding CurrentTrack.Track}"/>
                </TextBlock>

                <TextBlock FontSize="12" Visibility="{Binding CurrentTrack.Composer, Converter={StaticResource StringVisibility}}">
					<Run Text="by"/>
					<Run Text="{Binding CurrentTrack.Composer}"/>
                </TextBlock>
            </StackPanel>

            <Grid Grid.Row="1" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <ProgressRing Grid.Column="0" Visibility="{Binding IsBuffering, Converter={StaticResource BoolVisibility}}" IsActive="{Binding IsBuffering}"/>

                <Button Grid.Column="1" Click="{x:Bind VM.Play}" Visibility="{Binding IsPlaying, Converter={StaticResource NotBoolVisibility}}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <SymbolIcon Symbol="Play"/>
                </Button>

                <Button Grid.Column="1" Click="{x:Bind VM.Pause}" Visibility="{Binding IsPlaying, Converter={StaticResource BoolVisibility}}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <SymbolIcon Symbol="Pause"/>
                </Button>

                <Button Grid.Column="2" Click="{x:Bind VM.Stop}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <SymbolIcon Symbol="Stop"/>
                </Button>

                <Button Grid.Column="3" Click="{x:Bind VM.Prev}" IsEnabled="{Binding HasPrev}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <SymbolIcon Symbol="Previous"/>
                </Button>

                <Button Grid.Column="4" Click="{x:Bind VM.Next}" IsEnabled="{Binding HasNext}" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
                    <SymbolIcon Symbol="Next"/>
                </Button>
                <TextBlock Grid.Column="5" Text="{Binding CurrTimeString}" VerticalAlignment="Center" Margin="4,0"/>
                <Slider Grid.Column="6" Margin="8,0" Value="{Binding CurrentPosition}" Minimum="0" Maximum="{Binding CurrentLength}" IsEnabled="False" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="7" Text="{Binding CurrLengthString}" VerticalAlignment="Center" Margin="4,0"/>
            </Grid>
        </Grid>
        <CommandBar Grid.Row="4">
            <CommandBar.PrimaryCommands>
                <AppBarButton Icon="Save" Label="Save playlist" Click="{x:Bind VM.SavePlaylist}"/>
                <AppBarButton Label="Empty playlist" Icon="Delete" Click="{x:Bind VM.CleanPlaylistAction}"/>
            </CommandBar.PrimaryCommands>
        </CommandBar>
    </Grid>
</Page>
